#***********************服务配置*********************************
server.port=9999
#************************跨域白名单******************************
white.list=http://www.t1.com,http://www.t2.com
#***********************数据库配置*******************************
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true
spring.datasource.username=root
spring.datasource.password=123456


#***********************数据源配置*******************************
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20


# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
spring.datasource.filters=stat
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500


#***********************Mybatis配置*****************************
mybatis.check-config-location=false
# 指定sql映射文件的位置
mybatis.mapper-locations=classpath*:mybatis/mapper/**/*.xml
# 调整日志输出级别
logging.level.com.mrcoder.frameservice.mapper=info


#***********************Swagger2配置****************************
# 为指定包路径下的接口创建API文档
swagger2.basePackage=com.mrcoder.frameservice.controller
spring.main.allow-bean-definition-overriding=true
#****************Redis配置**********************
# Redis数据库索引（默认为0）
spring.redis.database=2
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1ms
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=1
# 连接超时时间（毫秒）
spring.redis.timeout=3000


#***********************业务系统配置*****************************
# 业务域名
system.apiHost=http://127.0.0.1:9999
system.appName=FrameService


#***********************第三方系统API配置************************
# 用户系统
userSystem.apiHost=http://test.user.com


#***********************返回时间配置*****************************
# 过滤Null
#spring.jackson.default-property-inclusion=NON_NULL
# 返回时间戳
#spring.jackson.serialization.write-dates-as-timestamps=true
# 指定格式返回时间
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
# 指定时区
spring.jackson.time-zone=GMT+8
# 允许出现特殊字符和转义符
spring.jackson.parser.allow-unquoted-control-chars=true
# 允许出现单引号
spring.jackson.parser.allow-single-quotes=true


#***********************Flyway配置*****************************
# flyway的clean命令会删除指定schema下的所有table.
spring.flyway.cleanDisabled=false
#对于已经存在的项目,之前的sql脚本都不执行
spring.flyway.baseline-on-migrate=true
#表名修改flyway_schema_history
spring.flyway.table=frame_migration_history
